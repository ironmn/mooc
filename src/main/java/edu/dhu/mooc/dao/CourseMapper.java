package edu.dhu.mooc.dao;

import edu.dhu.mooc.entity.course.Course;
import edu.dhu.mooc.entity.course.CourseDetail;
import edu.dhu.mooc.entity.course.CourseInfo;
import edu.dhu.mooc.entity.Part;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

@Mapper
@Repository
public interface CourseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbg.generated Wed Mar 24 19:47:38 CST 2021
     */
    int deleteByPrimaryKey(String c_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbg.generated Wed Mar 24 19:47:38 CST 2021
     */
    int insert(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbg.generated Wed Mar 24 19:47:38 CST 2021
     */
    int insertSelective(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbg.generated Wed Mar 24 19:47:38 CST 2021
     */
    Course selectByPrimaryKey(String c_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbg.generated Wed Mar 24 19:47:38 CST 2021
     */
    int updateByPrimaryKeySelective(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbg.generated Wed Mar 24 19:47:38 CST 2021
     */
    int updateByPrimaryKey(Course record);

    /**
     * 通过学生的id查询课程信息
     * @param s_id 学生id
     * @return 前端要求的数据结构
     * @sql
     * SELECT c_id,c_name,teacher.`t_name` FROM course,teacher WHERE c_id IN

    (SELECT c_id FROM sc WHERE sc.`s_id` = '2154445') AND course.`t_id` = teacher.`t_id`
     * @test 经过测试，该功能完好，可以正常执行
     */
    List<CourseInfo> findCourseListById(String s_id);

    List<Part> selectPartList(String c_id);

    List<Course> findAll();

    /**SQL语句：
     *     SELECT
     *       c_id,
     *       c_name,
     *       t_name
     *     FROM
     *         course,
     *         teacher
     *     where
     *         course.`t_id` = teacher.`t_id`;
     * @return 封装好的Course对象
     * @test 经过测试，该功能完好，可以正常执行
     */
    List<CourseInfo> findAllCourseInfoList();

    CourseDetail findCourseDetailById(@Param("c_id") String c_id);
}